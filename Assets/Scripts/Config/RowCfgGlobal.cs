
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;



public sealed partial class RowCfgGlobal : Luban.BeanBase
{
    public RowCfgGlobal(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Value = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ListValue = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); ListValue.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);DictValue = new System.Collections.Generic.Dictionary<string, string>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { string _k0;  _k0 = _buf.ReadString(); string _v0;  _v0 = _buf.ReadString();     DictValue.Add(_k0, _v0);}}
    }

    public static RowCfgGlobal DeserializeRowCfgGlobal(ByteBuf _buf)
    {
        return new RowCfgGlobal(_buf);
    }

    /// <summary>
    /// 全局变量名
    /// </summary>
    public readonly string Id;
    /// <summary>
    /// 变量值
    /// </summary>
    public readonly string Value;
    /// <summary>
    /// 列表类变量值
    /// </summary>
    public readonly System.Collections.Generic.List<string> ListValue;
    /// <summary>
    /// 字典类变量值
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<string, string> DictValue;
   
    public const int __ID__ = -1916484467;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "value:" + Value + ","
        + "listValue:" + Luban.StringUtil.CollectionToString(ListValue) + ","
        + "dictValue:" + Luban.StringUtil.CollectionToString(DictValue) + ","
        + "}";
    }
}


