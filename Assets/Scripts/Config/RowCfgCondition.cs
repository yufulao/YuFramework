
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;



public sealed partial class RowCfgCondition : Luban.BeanBase
{
    public RowCfgCondition(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Condition = _buf.ReadString();
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ParamList = new string[__n0][];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string[] __e0;{int __n1 = System.Math.Min(_buf.ReadSize(), _buf.Size);__e0 = new string[__n1];for(var __index1 = 0 ; __index1 < __n1 ; __index1++) { string __e1;__e1 = _buf.ReadString(); __e0[__index1] = __e1;}} ParamList[__index0] = __e0;}}
    }

    public static RowCfgCondition DeserializeRowCfgCondition(ByteBuf _buf)
    {
        return new RowCfgCondition(_buf);
    }

    /// <summary>
    /// 条件id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 表达式
    /// </summary>
    public readonly string Condition;
    /// <summary>
    /// 原子条件1参数
    /// </summary>
    public readonly string[][] ParamList;
   
    public const int __ID__ = 2057309169;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "condition:" + Condition + ","
        + "paramList:" + Luban.StringUtil.CollectionToString(ParamList) + ","
        + "}";
    }
}


